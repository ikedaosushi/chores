{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "ArxivtimesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/arXivTimes-dev-arxivtimes"
      }
    },
    "TwitterLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/arXivTimes-dev-twitter"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "arXivTimes",
              "dev",
              "ap-northeast-1",
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "IamPolicyLambdaExecution": {
      "Type": "AWS::IAM::Policy",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "-",
            [
              "dev",
              "arXivTimes",
              "lambda"
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      {
                        "Fn::GetAtt": [
                          "ArxivtimesLogGroup",
                          "Arn"
                        ]
                      },
                      "*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    ":",
                    [
                      {
                        "Fn::GetAtt": [
                          "TwitterLogGroup",
                          "Arn"
                        ]
                      },
                      "*"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "IamRoleLambdaExecution"
          }
        ]
      }
    },
    "ArxivtimesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/arXivTimes/dev/1492510195915-2017-04-18T10:09:55.915Z/arXivTimes.zip"
        },
        "FunctionName": "arXivTimes-dev-arxivtimes",
        "Handler": "handler.arxivtimes",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs4.3",
        "Timeout": 6
      },
      "DependsOn": [
        "IamPolicyLambdaExecution",
        "IamRoleLambdaExecution"
      ]
    },
    "ArxivtimesLambdaVersion7IugCIMcfhMWYXfmUA17efYoCGCmgrIVDZgQKaOi3U": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ArxivtimesLambdaFunction"
        },
        "CodeSha256": "7IugCIMcfhMWYXfmUA17efYoCGCmgrIVDZgQK/aOi3U="
      }
    },
    "TwitterLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/arXivTimes/dev/1492510195915-2017-04-18T10:09:55.915Z/arXivTimes.zip"
        },
        "FunctionName": "arXivTimes-dev-twitter",
        "Handler": "twitter.hillbig",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs4.3",
        "Timeout": 6
      },
      "DependsOn": [
        "IamPolicyLambdaExecution",
        "IamRoleLambdaExecution"
      ]
    },
    "TwitterLambdaVersion7IugCIMcfhMWYXfmUA17efYoCGCmgrIVDZgQKaOi3U": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "TwitterLambdaFunction"
        },
        "CodeSha256": "7IugCIMcfhMWYXfmUA17efYoCGCmgrIVDZgQK/aOi3U="
      }
    },
    "ArxivtimesEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(1 hour)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ArxivtimesLambdaFunction",
                "Arn"
              ]
            },
            "Id": "arxivtimesSchedule"
          }
        ]
      }
    },
    "ArxivtimesLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ArxivtimesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ArxivtimesEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "TwitterEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(1 hour)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "TwitterLambdaFunction",
                "Arn"
              ]
            },
            "Id": "twitterSchedule"
          }
        ]
      }
    },
    "TwitterLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "TwitterLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "TwitterEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "ArxivtimesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ArxivtimesLambdaVersion7IugCIMcfhMWYXfmUA17efYoCGCmgrIVDZgQKaOi3U"
      }
    },
    "TwitterLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "TwitterLambdaVersion7IugCIMcfhMWYXfmUA17efYoCGCmgrIVDZgQKaOi3U"
      }
    }
  }
}